void secret_backdoor(void) {
	char buff[128];

	fgets(buff, 140, _stdin);
	system(buff);
	return;
}

void set_msg(char *buffer)
{
	char input[1024];

	memset(input, 0, 1024);
	puts(">: Msg @Unix-Dude");
	printf(">>: ");
	fgets(input, 1024, _stdin);
	strncpy(buffer, input, *(size_t *)((char *)(buffer + 180)));
	return;
}

void set_username(char *inputer) {

	memset(inputer, 0);
	puts(">: Enter your username");
	printf(">>: ");
	fgets(inputer, 128, _stdin);

	for (int i = 0; (i < 41 && inputer[i] != '\0'); i++) {
	  *(char *)(inputer + 140 + (long)i) = *inputer[i];
	  inputer[i + 140] = inputer[i];
	  i++:
	}
	printf(">: Welcome, %s", *inputer + 140);
	return;
}


void handle_msg(void) {

	char inputer[140];

	set_username(inputer);
	set_msg(inputer);
	puts(">: Msg sent!");
}


int main(int argc, char **argv) {
	puts("--------------------------------------------\n|   ~Welcome to l33t-m$n ~    v1337        |\n- -------------------------------------------");
	handle_msg();
	return 0;
}


------------------------------------------------------------

int main(void)
{
	puts(
		"--------------------------------------------\n|   ~Welcome to l33t-m$n ~    v1337        |\n- -------------------------------------------"
		);
	handle_msg();
	return 0;
}

void handle_msg(void)
{
	char user_data[140];

	set_username(user_data);
	set_msg(user_data);
	puts(">: Msg sent!");
	return;
}

void set_username(long user_data)
{
	char input[140];
	int i;

	memset(input, 0, sizeof(input));
	puts(">: Enter your username");
	printf(">>: ");
	fgets(input,128,_stdin);
	for (i = 0; (i < 41 && (input[i] != '\0')); i++) {
		*(char *)(user_data + 140 + (long)i) = input[i];
	}
	printf(">: Welcome, %s",user_data + 140);
	return;
}
void set_msg(char *user_data)
{
	char message[1024];

	memset(message, 0, sizeof(message))
	puts(">: Msg @Unix-Dude");
	printf(">>: ");
	fgets(message,1024,_stdin);
	strncpy(user_data,message,(long)*(int *)(user_data + 180));
	return;
}

void secret_backdoor(void)
{
	char command[128];

	fgets(command,128,_stdin);
	system(command);
	return;
}
