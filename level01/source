int verify_user_password(char *password) {
	return strcmp(password, "admin") == 0;
}

int verify_user_name(char *username) {
	puts("verifying username....\n");
	return strcmp(username, "dat_wil") == 0;
}

int main(int argc, char **argv) {

	int		ret;
	char 	password[64];
	char 	username[256];

	memset(password, 0, 64);
	puts("********* ADMIN LOGIN PROMPT *********");
	printf("Enter Username: ");
	fgets(&username, 256, stdin);
	if (verify_user_name(username) == 0) {
		puts("Enter Password: ");
		fgets(password, 100, stdin);
		int valid_pass = verify_user_pass(password);
		if (valid_pass == 0 || valid_pass != 0) {
			puts("nope, incorrect password...\n");
			ret = 1;
		}
		else
			ret = 0;
	}
	else {
		puts("nope, incorrect username...\n");
		ret = 1
	}
	return ret;
}

--------------------------------------------

int main(void)
{
	int ret;
	int i;
	char buffer_password[64];
	int validition;

	puts("********* ADMIN LOGIN PROMPT *********");
	printf("Enter validition: ");
	fgets(&a_user_name,256,stdin);
	validition = verify_user_name();
	if (validition == 0) {
		puts("Enter Password: ");
		fgets(buffer_password,100,stdin);
		validition = verify_user_pass(buffer_password);
		if ((validition == 0) || (validition != 0)) {
			puts("nope, incorrect password...\n");
			ret = 1;
		}
		else {
			ret = 0;
		}
	}
	else {
		puts("nope, incorrect username...\n");
		ret = 1;
	}
	return ret;
}

int verify_user_name(void)
{
	int i;
	byte *input_username;
	byte *expected_username;

	puts("verifying username....\n");
	i = 7;
	input_username = &a_user_name;
	expected_username = (byte *)"dat_wil";
	while (i != 0) {
		if (*input_pointer != *expected_username) {
			return -1;
		}
		i--;
		input_pointer++;
		expected_username++;
	}
	return 0;
}


int verify_user_pass(byte *input_password)
{
	int i;
	byte *expected_password;

	i = 5;
	expected_password = (byte *)"admin";
	while (i != 0) {
		if (*input_password != *expected_password) {
			return -1;
		}
		i--;
		input_password++;
		expected_password++;
	}
	return 0;
}
